{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Downloads\\\\full\\\\src\\\\pages\\\\containerCourse\\\\ListStudent\\\\index.js\",\n  _s = $RefreshSig$();\nimport classNames from 'classnames/bind';\nimport styles from \"./ListStudent.module.scss\";\nimport ItemStudent from \"./ItemStudent\";\nimport { useEffect, useState } from 'react';\nimport { database, set, child, ref, onValue } from \"../../Login\";\nimport { UseStore } from \"../../../Store\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cx = classNames.bind(styles);\nfunction ListStudent() {\n  _s();\n  const [state, setState] = useState([]);\n  let courseID = localStorage.getItem('courseID');\n  let classCourse = localStorage.getItem('classCourse');\n  let standardizeEmail = localStorage.getItem('standardizeEmail');\n  const dbRef = ref(database);\n  let [x] = UseStore();\n  let {\n    todos\n  } = x;\n  let [type] = useState(todos.job);\n  function typePerson(type) {\n    if (type === 'student') return true;else if (type === 'teacher') return false;\n  }\n\n  // useEffect(() => {\n  //     if (!type) {\n  //         get(child(dbRef, `accounts/${standardizeEmail}/type`)).then((snapshot) => {\n  //             if (snapshot.exists()) {\n  //                 setType(snapshot.val());\n  //             }\n  //         });\n  //     }\n  //     let x = setTimeout(() => {\n  //         setshow(true);\n  //     }, 2000);\n  //     return () => {\n  //         clearTimeout(x);\n  //     };\n  // }, []);\n  // const [show, setshow] = useState(false);\n  useEffect(() => {\n    onValue(child(dbRef, `courses/current/score/${courseID}_${classCourse}`), snapshot => {\n      if (snapshot.exists()) {\n        let arr = [];\n        for (let i = 0; i < snapshot.size; i++) {\n          arr.push({\n            Name: snapshot.val()[i].Name,\n            Diem: snapshot.val()[i].Diem,\n            MSSV: snapshot.val()[i].MSSV,\n            Chinhsua: snapshot.val()[i].Chinhsua,\n            index: i\n          });\n          if (snapshot.val()[i].email !== \"\") {\n            let email = snapshot.val()[i].email;\n            let arrStu = [{\n              Name: \"Họ và tên\",\n              Diem: \"Điểm\",\n              MSSV: \"MSSV\"\n            }];\n            arrStu.push({\n              Name: snapshot.val()[i].Name,\n              Diem: snapshot.val()[i].Diem,\n              MSSV: snapshot.val()[i].MSSV\n            });\n            set(child(dbRef, `accounts/${email}/courses/current/score/${courseID}_${classCourse}`), arrStu);\n          }\n        }\n        if (type === 'teacher') {\n          setState(arr);\n        } else if (type === \"student\") {\n          onValue(child(dbRef, `accounts/${standardizeEmail}/courses/current/score/${courseID}_${classCourse}`), dataStudent => {\n            if (dataStudent.exists()) {\n              setState(dataStudent.val());\n            }\n          });\n        }\n      }\n    });\n    // eslint-disable-next-line\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: cx('score_table'),\n    children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: state.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(ItemStudent, {\n          MSSV: item.MSSV,\n          Name: item.Name,\n          Diem: item.Diem,\n          type: !typePerson(type),\n          Chinhsua: item.Chinhsua,\n          index: item.index,\n          courseID: courseID,\n          classCourse: classCourse,\n          xoa: () => {\n            let newstate = [];\n            for (let i = 0; i < state.length; i++) {\n              if (i !== index) {\n                newstate.push(state[i]);\n              }\n            }\n            setState(newstate);\n          }\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n}\n_s(ListStudent, \"lsY2m4ij9xNLJvsJkFRrCsDNgbg=\");\n_c = ListStudent;\nexport default ListStudent;\nvar _c;\n$RefreshReg$(_c, \"ListStudent\");","map":{"version":3,"names":["classNames","styles","ItemStudent","useEffect","useState","database","set","child","ref","onValue","UseStore","jsxDEV","_jsxDEV","cx","bind","ListStudent","_s","state","setState","courseID","localStorage","getItem","classCourse","standardizeEmail","dbRef","x","todos","type","job","typePerson","snapshot","exists","arr","i","size","push","Name","val","Diem","MSSV","Chinhsua","index","email","arrStu","dataStudent","className","children","map","item","xoa","newstate","length","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/PC/Downloads/full/src/pages/containerCourse/ListStudent/index.js"],"sourcesContent":["import classNames from 'classnames/bind';\r\nimport styles from './ListStudent.module.scss';\r\nimport ItemStudent from './ItemStudent';\r\n\r\nimport { useEffect, useState } from 'react';\r\nimport { database, set, child, ref, onValue } from '~/pages/Login';\r\nimport { UseStore } from '~/Store';\r\nconst cx = classNames.bind(styles);\r\nfunction ListStudent() {\r\n    const [state, setState] = useState([]);\r\n    let courseID = localStorage.getItem('courseID');\r\n    let classCourse = localStorage.getItem('classCourse');\r\n    let standardizeEmail = localStorage.getItem('standardizeEmail');\r\n    const dbRef = ref(database);\r\n    let [x] = UseStore();\r\n    let { todos } = x;\r\n    let [type] = useState(todos.job);\r\n    function typePerson(type) {\r\n        if (type === 'student') return true;\r\n        else if (type === 'teacher') return false;\r\n    }\r\n\r\n    // useEffect(() => {\r\n    //     if (!type) {\r\n    //         get(child(dbRef, `accounts/${standardizeEmail}/type`)).then((snapshot) => {\r\n    //             if (snapshot.exists()) {\r\n    //                 setType(snapshot.val());\r\n    //             }\r\n    //         });\r\n    //     }\r\n    //     let x = setTimeout(() => {\r\n    //         setshow(true);\r\n    //     }, 2000);\r\n    //     return () => {\r\n    //         clearTimeout(x);\r\n    //     };\r\n    // }, []);\r\n    // const [show, setshow] = useState(false);\r\n    useEffect(() => {\r\n        onValue(child(dbRef, `courses/current/score/${courseID}_${classCourse}`), (snapshot) => {\r\n            if (snapshot.exists()) {\r\n                let arr = [];\r\n                for (let i = 0; i < snapshot.size; i++) {\r\n                    arr.push({\r\n                        Name: snapshot.val()[i].Name,\r\n                        Diem: snapshot.val()[i].Diem,\r\n                        MSSV: snapshot.val()[i].MSSV,\r\n                        Chinhsua: snapshot.val()[i].Chinhsua,\r\n                        index: i,\r\n                    });\r\n                    if (snapshot.val()[i].email !== \"\") {\r\n                        let email = snapshot.val()[i].email;\r\n                        let arrStu = [{\r\n                            Name: \"Họ và tên\",\r\n                            Diem: \"Điểm\",\r\n                            MSSV: \"MSSV\"\r\n                        }]\r\n                        arrStu.push({\r\n                            Name: snapshot.val()[i].Name,\r\n                            Diem: snapshot.val()[i].Diem,\r\n                            MSSV: snapshot.val()[i].MSSV,\r\n                        })\r\n                        set(child(dbRef, `accounts/${email}/courses/current/score/${courseID}_${classCourse}`), arrStu)\r\n                    }\r\n                }\r\n                if (type === 'teacher') {\r\n                    setState(arr);\r\n                }\r\n                else if (type === \"student\") {\r\n                    onValue(child(dbRef, `accounts/${standardizeEmail}/courses/current/score/${courseID}_${classCourse}`), (dataStudent) => {\r\n                        if (dataStudent.exists()) {\r\n                            setState(dataStudent.val());\r\n                        }\r\n                    })\r\n                }\r\n            }\r\n        })\r\n        // eslint-disable-next-line\r\n    }, []);\r\n    return (\r\n        <table className={cx('score_table')}>\r\n            <tbody>\r\n                {state.map((item, index) => {\r\n                    return (\r\n                        <ItemStudent\r\n                            key={index}\r\n                            MSSV={item.MSSV}\r\n                            Name={item.Name}\r\n                            Diem={item.Diem}\r\n                            type={!typePerson(type)}\r\n                            Chinhsua={item.Chinhsua}\r\n                            index={item.index}\r\n                            courseID={courseID}\r\n                            classCourse={classCourse}\r\n                            xoa={() => {\r\n                                let newstate = [];\r\n                                for (let i = 0; i < state.length; i++) {\r\n                                    if (i !== index) {\r\n                                        newstate.push(state[i]);\r\n                                    }\r\n                                }\r\n                                setState(newstate);\r\n                            }}\r\n                        />\r\n                    );\r\n                })}\r\n            </tbody>\r\n        </table>\r\n    );\r\n}\r\n\r\nexport default ListStudent;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}